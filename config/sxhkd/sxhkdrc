# bspwm hotkeys
#
# Window manipulation
# ______________

# Close window
super + shift + q
	bspc  node -c

# Kill window
super + shift + x
	bspc  node -k

# Toggle tiling mode of window
super + shift + t
	bspc node -t {pseudo_tiled,tiled}
super + t
	{bspc node -t floating && window-placer $(bspc query -T -d | grep -o '"state":"floating"' | wc -l),bspc node -t tiled}
# Force all windows of the desktop to tile
super + ctrl + t
	bspcp tile
# Force all windows of the desktop to float and arrange them
super + ctrl + shift + t
	bspcp float
	
# Toggle fullscreen
super + shift + f 
	bspc node -t {fullscreen,tiled}	

# Try to keep size and position of the selected window
super + o
	bspc node -g private

# Make window sticky
super + i
	bspc node -g sticky

# Lock a window from closing
super + Escape
	bspc node -g locked 

### Map or unmap windows (functional equivalent of "minimize")
super + c
    whid dmenu

super + shift + c
    whid hide

super + ctrl + c
    whid last

#
# Window moving and splitting
# ______________    

# Autopresel (split window in its largest dimension)
ctrl + space
	auto-presel
	
# Presel window for splitting in certain direction
# alt + ctrl + {a,s,w,d}
#	bspc node -p \~{west,south,north,east} -i

alt + ctrl + {h,j,k,l}
	bspc node -p \~{west,south,north,east}

alt + ctrl + {Left,Down,Up,Right}
	bspc node -p \~{west,south,north,east}

# Presel the desktop for splitting in certain direction
# alt + shift + {a,s,w,d}
	# bspc node @/ -p \~{west,south,north,east}
# 
# alt + shift + {h,j,k,l}
	# bspc node @/ -p \~{west,south,north,east}

# alt + shift + {Left,Down,Up,Right}
	# bspc node @/ -p \~{west,south,north,east}
# Set splitting ratio of windows
alt + ctrl + {1-9}
	bspc node -o 0.{1-9}
		

# Create a new "master area", splitting the whole desktop instead of just windows.
alt + Return
	bspc node -n @/
	
# go (Shift=move) to desktop (and focus the monitor that the desktop is located on. Bspwm style)
super + {_,shift + }{1-9,0}
    bspc {desktop -f,node -d} ^{1-9,10} --follow

## Alternative: i3 style behavior (focus nth, desktop of the focused monitor)
#super + {1-9,0}
#	focusdesktopofthismonitor {1-9}
#super + shift + {1-9,0}
#	movetodesktopofthismonitor {1-9,10}

## Another alternative: xmonad style desktops. You have 10 desktops shared between all monitors,
## and focusing a desktop focuses it on the currently focused monitor
#super + {1-9,0}
#	summondesktop.sh {1-9,10}
#super + shift + {1-9,0}
#	bspc node -d ^{1-9,10}

# Select previous / next desktop
super + {m,n}
	bspc desktop -f {prev.occupied,next.occupied} 

# cycle windows
alt + {_,shift + }Tab
    rofi -show window -selected-row 1 \
        -kb-accept-entry "!Alt-Tab,!Alt_L,!Alt+Alt_L,Return" \
        -kb-row-down "Alt+Tab" \
        -kb-row-up "Alt+ISO_Left_Tab,Alt+Up" \
        -kb-cancel "Alt+Escape,Escape"
	

# Move tiled windows. Moving a tiled window to 
# preselected one moves into preselection instead. 
# Moving out of the screen should move the window to next monitor if possible

#
# Layout manipulation/desktop level controls
# ______________    

# Toggle monocle mode
super + f 
	bspc desktop -l next
	
# Balance tree
super + b
	bspc node @/ -B

# Balance brother node. If you do this on biggest window of the desktop, it usually means balancing all windows with except the biggest.
super + alt + b
	bspc node @brother -B
	
# Undo balancing (equalize windows)
super + ctrl + b
	bspc node @/ -E

# Mirror and flip leaves of tree
super + {comma,period}
	bspc node @/ -F {horizontal,vertical}
	
# Rotate leaves of tree
super + shift + {comma,period}
	bspc node @/ -R {90,270}

# Change window gap

super + g
	bspc config -d focused window_gap {$gap,$(($gap+$gap)),$(($gap+$gap+$gap))}

super + button{4,5}
	bspc config -d focused window_gap $((`bspc config -d focused window_gap` {+,-} 2 ))
#
# mouse bindings
# __________________

~button1
	DidIClickDesktop.sh && gapgrab	

~button2
	DidIClickDesktop.sh && mygtkmenui -- .config/GTKmenu/BspwmDesktopMenui
#DidIClickDesktop.sh && mygtkmenui -- .config/GTKmenu/BspwmWindowMenui
		
~button3
	DidIClickDesktop.sh && mygtkmenui -- .config/GTKmenu/LaunchMenu

# Switch workspace by scrolling on the desktop. Causes scrolling issues on some systems.
#~button4
#	DidIClickDesktop.sh && bspc desktop -f next
#~button5
#	DidIClickDesktop.sh && bspc desktop -f prev
	
### Add or remove desktops by scrolling
super + ctrl + button5
    bspcp dsktp rm

super + ctrl + button4
    bspcp dsktp add

# Spawn applications popup menu and manually tile selected 
# app where your mouse was when you opened the menu. Smartsplit only chooses
# biggest dimension of the window, MouseLaunch only cares which edge is closer.
# mod5 is alt_gr (first key right from space) on most keyboards. 
mod5 + @button1
    MouseLaunch ; mygtkmenui -- .config/GTKmenu/LaunchMenu
#	smartsplit ; dboxmenu

# Spawn window manipulation menu
# Mod1 is alt
#    BspwmWindowMenu
mod1 + @button1
    mygtkmenui -- .config/GTKmenu/BspwmWindowMenui


#
# Touchpad "gestures" (depend on your touchpad driver, very likely to be unavailable)
#_____________________
    
#
# spawn programs
#

# run applications

super + a
	rofi -show drun

#super + p
#	dmenu_recent -h $PANEL_HEIGHT -fn 'xos4 Terminus:size=15' -i

ctrl + alt + t
    open-terminal-here

super + shift + Return
	$TERMINAL
	
super + r
	rofi-finder.sh

super + shift + b
	$BROWSER
    		
super + e
	$TERMINAL ranger

# Use slightly bigger font for ranger
super + shift + e
	nautilus

Print
	shutter -C -f --min_at_startup --disable_systray

shift + Print
    shutter -C -s --min_at_startup --disable_systray

	
#
# Media keys
#

XF86AudioRaiseVolume
	amixer sset Master 655.36+

XF86AudioLowerVolume
	amixer sset Master 655.36-

XF86AudioMute
	amixer sset Master toggle
	
XF86MonBrightnessDown
    light -U 5 

XF86MonBrightnessUp
    light -A 5
 

XF86Sleep
	systemctl suspend

# make sxhkd reload its configuration files:
super + shift + Escape
	pkill -USR1 -x sxhkd; notify-send 'Sxhkd' 'Reloaded config'

# In case bspwmrc fails to execute/you wish have plugged in a new monitor
super + shift + r
	$HOME/.config/bspwm/bspwmrc; notify-send 'Bspwm' 'Reloaded config'
# Toggle compositing
super + ctrl + space
	{pkill picom , picom --experimental-backend -b }

# Lock
alt + l
    dbus-send --type=method_call --dest=org.gnome.ScreenSaver /org/gnome/ScreenSaver org.gnome.ScreenSaver.Lock

# Remove receptacles
super + BackSpace
    for i in $(bspc query -N -n .leaf.!window.local); do bspc node $i -k; done

# Expand/contract a window by moving one of its side outward/inward
super + s : {h,j,k,l}
    STEP=20; SELECTION={1,2,3,4}; \
    bspc node -z $(echo "left -$STEP 0,bottom 0 $STEP,top 0 -$STEP,right $STEP 0" | cut -d',' -f$SELECTION) || \
    bspc node -z $(echo "right -$STEP 0,top 0 $STEP,bottom 0 -$STEP,left $STEP 0" | cut -d',' -f$SELECTION)

# Focus
super + {h,j,k,l}
    d={west,south,north,east}; \
    bspc node --focus $d || \
    bspc monitor --focus $d

# Show help
super + slash
    $HOME/.config/sxhkd/sxhkd-help

# Rotate tree
super + shift + {d,a}
    bspc node @/ -C {forward,backward}
